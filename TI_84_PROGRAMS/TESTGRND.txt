" Subprograms
If 12345=iPart(θ:Then
100fPart(θ
DelVar θ
If Ans=1:Then
"Clears screen, redraws current level and entities

"[D]
For(I,1,12
For(J,1,8

If [D](J,I
Then
(I*7)+2→N
(J*7)-6→O
For(B,O,O+5
Pxl-On(B,N
End
End

End
End

"[E]
For(I,1,13
For(J,1,7

If [E](J,I
Then
(I*7)-4→N
(J*7)→O
For(B,N,N+5
Pxl-On(O,B
End
End

End
End

Return:End
If Ans=2:Then
"Draw character at x,y

3+(X*7)→N
1+(Y*7)→O
Pxl-On(O+1,N+2
Pxl-On(O+1,N+3
Pxl-On(O+2,N+1
Pxl-On(O+2,N+4
Pxl-On(O+3,N+1
Pxl-On(O+3,N+4
Pxl-On(O+4,N+2
Pxl-On(O+4,N+3

Return:End
If Ans=3:Then
"Draw monster at s,t

3+(S*7)→N
1+(T*7)→O
Pxl-On(O+1,N+1
Pxl-On(O+1,N+4
Pxl-On(O+2,N+2
Pxl-On(O+2,N+3
Pxl-On(O+3,N+2
Pxl-On(O+3,N+3
Pxl-On(O+4,N+1
Pxl-On(O+4,N+4

Return:End
If Ans=4:Then
"Draw ladder at u,v

3+(U*7)→N
1+(V*7)→O
Pxl-On(O,N+1
Pxl-On(O+1,N+1
Pxl-On(O+2,N+1
Pxl-On(O+3,N+1
Pxl-On(O+4,N+1
Pxl-On(O+5,N+1
Pxl-On(O,N+4
Pxl-On(O+1,N+4
Pxl-On(O+2,N+4
Pxl-On(O+3,N+4
Pxl-On(O+4,N+4
Pxl-On(O+5,N+4
Pxl-On(O,N+2
Pxl-On(O,N+3
Pxl-On(O+2,N+2
Pxl-On(O+2,N+3
Pxl-On(O+4,N+2
Pxl-On(O+4,N+3

Return:End
If Ans=5:Then
"Erase a space at  N,O
4+(N*7)→N
1+(O*7)→O
For(I,N,N+3
For(J,O,O+5
Pxl-Off(J,I
End
End

Return:End
If Ans=6:Then
"Unused

Return:End
If Ans=7:Then
"Unused

Return:End
If Ans=8:Then
"Unused

Return:End
If Ans=9:Then
"Unused

Return:End
If Ans=11:Then
"Unused

Return:End
If Ans=12:Then
"Unused

Return:End
If Ans=13:Then
"Check for win/lose
If (X=S and Y=T
Then
  For(I,1,56,3
    Pxl-On(I,1
    Pxl-On(I,94
  End
  12345.16→θ
  prgmTESTGRND
  For(I,1,56,3
    Pxl-Off(I,1
    Pxl-Off(I,94
  End
  Return
End
If (X=U and Y=V
Then
  W+1→W
  If W>H
  Then
    1→W
  End
  Text(57,25,W
  
  For(I,1,56,3
    Pxl-On(I,1
    Pxl-On(I,94
  End
  
  prgmLEVELS
  12345.14→θ
  prgmTESTGRND

  "Erases board, draws grid
  For(I,7,61
    Line(3,I,92,I,0
  End
  For(I,9,86,7
  For(J,7,49,7
    Pxl-On(J,I
  End
  End

  "Draw walls
  12345.01→θ
  prgmTESTGRND

  "Draw entities
  12345.02→θ
  prgmTESTGRND
  12345.03→θ
  prgmTESTGRND
  12345.04→θ
  prgmTESTGRND
  
  For(I,1,56,3
    Pxl-Off(I,1
    Pxl-Off(I,94
  End
End

Return:End
If Ans=14:Then
"Sets up matrices, should be called after prgmLEVELS
{7,13}→dim([E]
For(A,0,6
For(B,1,13
expr(sub(Str2,13A+B,1→[E](A+1,B
End
End

{8,12}→dim([D]
For(A,0,7
For(B,1,12
expr(sub(Str1,12A+B,1→[D](A+1,B
End
End

Return:End
If Ans=15:Then
"Moves monster
√((X-S)²+(Y-T)²→D

"Left
If √((X-(S-1))²+(Y-T)²)<D:Then
  If [D](T+1,S)=0:Then
    S→N:T→O
    12345.05→θ
    prgmTESTGRND
    S-1→S
    12345.03→θ
    prgmTESTGRND
    Return
  End
End
"Right
If √((X-(S+1))²+(Y-T)²)<D:Then
  If [D](T+1,S+1)=0:Then
    S→N:T→O
    12345.05→θ
    prgmTESTGRND
    S+1→S
    12345.03→θ
    prgmTESTGRND
    Return
  End
End
"Up
If √((X-S)²+(Y-(T-1))²)<D:Then
  If [E](T,S+1)=0:Then
    S→N:T→O
    12345.05→θ
    prgmTESTGRND
    T-1→T
    12345.03→θ
    prgmTESTGRND
    Return
  End
End
"Down
If √((X-S)²+(Y-(T+1))²)<D:Then
  If [E](T+1,S+1)=0:Then
    S→N:T→O
    12345.05→θ
    prgmTESTGRND
    T+1→T
    12345.03→θ
    prgmTESTGRND
    Return
  End
Return
End

Return:End
If Ans=16:Then
"Resets level
X→N:Y→O
12345.05→θ
prgmTESTGRND
S→N:T→O
12345.05→θ
prgmTESTGRND

prgmLEVELS
12345.02→θ
prgmTESTGRND
12345.03→θ
prgmTESTGRND
12345.04→θ
prgmTESTGRND
Return:End
"More subprograms here
End
"End subprograms




"Start main program
0→M
ClrHome

"Max levels H
22→H
Disp "Level (1-11): 

Repeat W≤H and W>0
Input W
End
iPart(W→W

StoreGDB 5
ClrDraw
ClrHome
GridOff
AxesOff
LabelOff
FnOff 
PlotsOff 

ZStandard
84→Xmin
72→Ymax
ZInteger

"Loading graphics
Text(57,15,"Quit button: Zoom
Text(⁻1,25,23,"LOADING"

"Level Select
prgmLEVELS
12345.14→θ
prgmTESTGRND

"Pxl-On(31,65

For(I,0,7
Line(15,I,70,I,0
Line(23,I+30,63,I+30,0
End

" Draw board
Horizontal 6
Horizontal 62
Vertical 2
Vertical 93

Line(0,6,0,64,0
Line(1,6,1,64,0
Line(94,6,94,64,0
For(I,2,95,7
Line(I,0,I,5,0
End

Text(57,3,"Level
Text(57,25,W
Line(40,0,40,4
Text(57,42,"quit
Line(55,0,55,4
Text(57,57,"reset"
Line(75,0,75,4
Text(57,77,"wait

For(I,9,86,7
For(J,7,49,7
Pxl-On(J,I
End
End

"Draw walls
12345.01→θ
prgmTESTGRND

"Draw entities
12345.02→θ
prgmTESTGRND
12345.03→θ
prgmTESTGRND
12345.04→θ
prgmTESTGRND


" Waits for user to press an arrow key, 13 quits, 14 resets, 15 waits for monster to move
While 1
0→A
Repeat A=24 or A=25 or A=26 or A=34 or A=13 or A=14 or A=15
getKey→A
End
" Got a valid input now
If A=13:Then
"Quit
RecallGDB 5
DelVar [E]DelVar [D]DelVar Str1DelVar Str2DelVar GDB5
DelVar XDelVar YDelVar SDelVar TDelVar UDelVar VDelVar ADelVar θDelVar W
DelVar BDelVar IDelVar JDelVar NDelVar ODelVar WDelVar DDelVar HDelVar M
ClrHome
Return
End
If A=14:Then
"Reset
12345.16→θ
prgmTESTGRND
End
If A=24:Then
"Left
  If X>0
  Then
  If [D](Y+1,X)=0
  Then
    X→N:Y→O
    12345.05→θ
    prgmTESTGRND
    X-1→X
    12345.02→θ
    prgmTESTGRND
  End
  End
End
If A=25:Then
"Up
  If Y>0
  Then
  If [E](Y,X+1)=0
  Then
  X→N:Y→O
  12345.05→θ
  prgmTESTGRND
  Y-1→Y
  12345.02→θ
  prgmTESTGRND
  End
  End
End
If A=26:Then
"Right
  If X<12
  Then
  If [D](Y+1,X+1)=0
  Then
  X→N:Y→O
  12345.05→θ
  prgmTESTGRND
  X+1→X
  12345.02→θ
  prgmTESTGRND
  End
  End
End
If A=34:Then
"Down
  If Y<8
  Then
  If [E](Y+1,X+1)=0
  Then
  X→N:Y→O
  12345.05→θ
  prgmTESTGRND
  Y+1→Y
  12345.02→θ
  prgmTESTGRND
  End
  End
End
If A=24 or A=25 or A=26 or A=34 or A=15:Then
  "Move monster
  If S=U and T=V:Then
    1→M
  End
  12345.15→θ
  prgmTESTGRND
  If S=U and T=V:Then
    1→M
  End
  12345.15→θ
  prgmTESTGRND
  If M:Then
  12345.04→θ
  prgmTESTGRND
  End
  "Check for win/lose
  12345.13→θ
  prgmTESTGRND
End


End